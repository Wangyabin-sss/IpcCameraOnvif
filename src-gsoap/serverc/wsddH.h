/* wsddH.h
   Generated by gSOAP 2.8.122 for ../gsoap-2.8/gsoap/import/wsdd5.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef wsddH_H
#define wsddH_H
#include "wsddStub.h"
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_byte
#define soap_PATCH_byte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_int
#define soap_PATCH_int(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsdd__MetadataVersion is a typedef synonym of unsignedInt */

#ifndef SOAP_TYPE__wsdd__MetadataVersion_DEFINED
#define SOAP_TYPE__wsdd__MetadataVersion_DEFINED

#define soap_default__wsdd__MetadataVersion soap_default_unsignedInt


#define soap__wsdd__MetadataVersion2s soap_unsignedInt2s


#define soap_out__wsdd__MetadataVersion soap_out_unsignedInt


#define soap_s2_wsdd__MetadataVersion soap_s2unsignedInt


#define soap_in__wsdd__MetadataVersion soap_in_unsignedInt

#define soap_new__wsdd__MetadataVersion soap_new_unsignedInt

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__MetadataVersion(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write__wsdd__MetadataVersion
#define soap_write__wsdd__MetadataVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__MetadataVersion
#define soap_PUT__wsdd__MetadataVersion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__MetadataVersion
#define soap_PATCH__wsdd__MetadataVersion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__MetadataVersion
#define soap_POST_send__wsdd__MetadataVersion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__MetadataVersion soap_get_unsignedInt


#define soap_read__wsdd__MetadataVersion soap_read_unsignedInt


#define soap_GET__wsdd__MetadataVersion soap_GET_unsignedInt


#define soap_POST_recv__wsdd__MetadataVersion soap_POST_recv_unsignedInt

#endif

#ifndef SOAP_TYPE_unsignedInt_DEFINED
#define SOAP_TYPE_unsignedInt_DEFINED

#ifdef SOAP_DEFAULT_unsignedInt
#define soap_default_unsignedInt(soap, a) (*(a) = SOAP_DEFAULT_unsignedInt)
#else
#define soap_default_unsignedInt(soap, a) (*(a) = (unsigned int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_new_unsignedInt(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_unsignedInt
#define soap_PUT_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_unsignedInt
#define soap_PATCH_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_unsignedInt
#define soap_POST_send_unsignedInt(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_unsignedInt
#define soap_GET_unsignedInt(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_unsignedInt(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_unsignedInt
#define soap_POST_recv_unsignedInt(soap, data) ( soap_read_unsignedInt(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsa5__RetryAfter is a typedef synonym of ULONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter_DEFINED
#define SOAP_TYPE__wsa5__RetryAfter_DEFINED

#define soap_default__wsa5__RetryAfter soap_default_ULONG64


#define soap__wsa5__RetryAfter2s soap_ULONG642s


#define soap_out__wsa5__RetryAfter soap_out_ULONG64


#define soap_s2_wsa5__RetryAfter soap_s2ULONG64


#define soap_in__wsa5__RetryAfter soap_in_ULONG64

#define soap_new__wsa5__RetryAfter soap_new_ULONG64

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__RetryAfter(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write__wsa5__RetryAfter
#define soap_write__wsa5__RetryAfter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__RetryAfter
#define soap_PUT__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__RetryAfter
#define soap_PATCH__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__RetryAfter
#define soap_POST_send__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__RetryAfter soap_get_ULONG64


#define soap_read__wsa5__RetryAfter soap_read_ULONG64


#define soap_GET__wsa5__RetryAfter soap_GET_ULONG64


#define soap_POST_recv__wsa5__RetryAfter soap_POST_recv_ULONG64

#endif

#ifndef SOAP_TYPE_ULONG64_DEFINED
#define SOAP_TYPE_ULONG64_DEFINED

#ifdef SOAP_DEFAULT_ULONG64
#define soap_default_ULONG64(soap, a) (*(a) = SOAP_DEFAULT_ULONG64)
#else
#define soap_default_ULONG64(soap, a) (*(a) = (ULONG64)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_new_ULONG64(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_ULONG64
#define soap_write_ULONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ULONG64
#define soap_PUT_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ULONG64
#define soap_PATCH_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ULONG64
#define soap_POST_send_ULONG64(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_ULONG64
#define soap_read_ULONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_ULONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ULONG64
#define soap_GET_ULONG64(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ULONG64(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ULONG64
#define soap_POST_recv_ULONG64(soap, data) ( soap_read_ULONG64(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__FaultCodeType_DEFINED
#define SOAP_TYPE_wsdd__FaultCodeType_DEFINED

#ifdef SOAP_DEFAULT_wsdd__FaultCodeType
#define soap_default_wsdd__FaultCodeType(soap, a) (*(a) = SOAP_DEFAULT_wsdd__FaultCodeType)
#else
#define soap_default_wsdd__FaultCodeType(soap, a) (*(a) = (enum wsdd__FaultCodeType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__FaultCodeType(struct soap*, const char*, int, const enum wsdd__FaultCodeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsdd__FaultCodeType2s(struct soap*, enum wsdd__FaultCodeType);
SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_in_wsdd__FaultCodeType(struct soap*, const char*, enum wsdd__FaultCodeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsdd__FaultCodeType(struct soap*, const char*, enum wsdd__FaultCodeType *);

SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_new_wsdd__FaultCodeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__FaultCodeType(struct soap*, const enum wsdd__FaultCodeType *, const char*, const char*);

#ifndef soap_write_wsdd__FaultCodeType
#define soap_write_wsdd__FaultCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__FaultCodeType
#define soap_PUT_wsdd__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__FaultCodeType
#define soap_PATCH_wsdd__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__FaultCodeType
#define soap_POST_send_wsdd__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_get_wsdd__FaultCodeType(struct soap*, enum wsdd__FaultCodeType *, const char*, const char*);

#ifndef soap_read_wsdd__FaultCodeType
#define soap_read_wsdd__FaultCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__FaultCodeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__FaultCodeType
#define soap_GET_wsdd__FaultCodeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__FaultCodeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__FaultCodeType
#define soap_POST_recv_wsdd__FaultCodeType(soap, data) ( soap_read_wsdd__FaultCodeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED
#define SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED

#ifdef SOAP_DEFAULT__wsa5__IsReferenceParameter
#define soap_default__wsa5__IsReferenceParameter(soap, a) (*(a) = SOAP_DEFAULT__wsa5__IsReferenceParameter)
#else
#define soap_default__wsa5__IsReferenceParameter(soap, a) (*(a) = (enum _wsa5__IsReferenceParameter)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_new__wsa5__IsReferenceParameter(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_write__wsa5__IsReferenceParameter
#define soap_write__wsa5__IsReferenceParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__IsReferenceParameter
#define soap_PUT__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__IsReferenceParameter
#define soap_PATCH__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__IsReferenceParameter
#define soap_POST_send__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_read__wsa5__IsReferenceParameter
#define soap_read__wsa5__IsReferenceParameter(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__IsReferenceParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsa5__IsReferenceParameter
#define soap_GET__wsa5__IsReferenceParameter(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsa5__IsReferenceParameter(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsa5__IsReferenceParameter
#define soap_POST_recv__wsa5__IsReferenceParameter(soap, data) ( soap_read__wsa5__IsReferenceParameter(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__FaultCodesType
#define soap_default_wsa5__FaultCodesType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__FaultCodesType)
#else
#define soap_default_wsa5__FaultCodesType(soap, a) (*(a) = (enum wsa5__FaultCodesType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_new_wsa5__FaultCodesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesType
#define soap_write_wsa5__FaultCodesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__FaultCodesType
#define soap_PUT_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__FaultCodesType
#define soap_PATCH_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__FaultCodesType
#define soap_POST_send_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesType
#define soap_read_wsa5__FaultCodesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__FaultCodesType
#define soap_GET_wsa5__FaultCodesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__FaultCodesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__FaultCodesType
#define soap_POST_recv_wsa5__FaultCodesType(soap, data) ( soap_read_wsa5__FaultCodesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelationshipType_DEFINED
#define SOAP_TYPE_wsa5__RelationshipType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__RelationshipType
#define soap_default_wsa5__RelationshipType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__RelationshipType)
#else
#define soap_default_wsa5__RelationshipType(soap, a) (*(a) = (enum wsa5__RelationshipType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_new_wsa5__RelationshipType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipType
#define soap_write_wsa5__RelationshipType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelationshipType
#define soap_PUT_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelationshipType
#define soap_PATCH_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelationshipType
#define soap_POST_send_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipType
#define soap_read_wsa5__RelationshipType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelationshipType
#define soap_GET_wsa5__RelationshipType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelationshipType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelationshipType
#define soap_POST_recv_wsa5__RelationshipType(soap, data) ( soap_read_wsa5__RelationshipType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__ResolveMatches_DEFINED
#define SOAP_TYPE___wsdd__ResolveMatches_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__ResolveMatches(struct soap*, struct __wsdd__ResolveMatches *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__ResolveMatches(struct soap*, const struct __wsdd__ResolveMatches *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__ResolveMatches(struct soap*, const char*, int, const struct __wsdd__ResolveMatches *, const char*);
SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_in___wsdd__ResolveMatches(struct soap*, const char*, struct __wsdd__ResolveMatches *, const char*);

SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_new___wsdd__ResolveMatches(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__ResolveMatches(struct soap*, const struct __wsdd__ResolveMatches *, const char*, const char*);

#ifndef soap_write___wsdd__ResolveMatches
#define soap_write___wsdd__ResolveMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__ResolveMatches
#define soap_PUT___wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__ResolveMatches
#define soap_PATCH___wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__ResolveMatches
#define soap_POST_send___wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_get___wsdd__ResolveMatches(struct soap*, struct __wsdd__ResolveMatches *, const char*, const char*);

#ifndef soap_read___wsdd__ResolveMatches
#define soap_read___wsdd__ResolveMatches(soap, data) ( ((data) ? (soap_default___wsdd__ResolveMatches(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__ResolveMatches(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__ResolveMatches
#define soap_GET___wsdd__ResolveMatches(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__ResolveMatches(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__ResolveMatches
#define soap_POST_recv___wsdd__ResolveMatches(soap, data) ( soap_read___wsdd__ResolveMatches(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Resolve_DEFINED
#define SOAP_TYPE___wsdd__Resolve_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Resolve(struct soap*, struct __wsdd__Resolve *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Resolve(struct soap*, const struct __wsdd__Resolve *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Resolve(struct soap*, const char*, int, const struct __wsdd__Resolve *, const char*);
SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_in___wsdd__Resolve(struct soap*, const char*, struct __wsdd__Resolve *, const char*);

SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_new___wsdd__Resolve(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Resolve(struct soap*, const struct __wsdd__Resolve *, const char*, const char*);

#ifndef soap_write___wsdd__Resolve
#define soap_write___wsdd__Resolve(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Resolve
#define soap_PUT___wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Resolve
#define soap_PATCH___wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Resolve
#define soap_POST_send___wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_get___wsdd__Resolve(struct soap*, struct __wsdd__Resolve *, const char*, const char*);

#ifndef soap_read___wsdd__Resolve
#define soap_read___wsdd__Resolve(soap, data) ( ((data) ? (soap_default___wsdd__Resolve(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Resolve(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Resolve
#define soap_GET___wsdd__Resolve(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Resolve(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Resolve
#define soap_POST_recv___wsdd__Resolve(soap, data) ( soap_read___wsdd__Resolve(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__ProbeMatches_DEFINED
#define SOAP_TYPE___wsdd__ProbeMatches_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__ProbeMatches(struct soap*, struct __wsdd__ProbeMatches *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__ProbeMatches(struct soap*, const struct __wsdd__ProbeMatches *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__ProbeMatches(struct soap*, const char*, int, const struct __wsdd__ProbeMatches *, const char*);
SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_in___wsdd__ProbeMatches(struct soap*, const char*, struct __wsdd__ProbeMatches *, const char*);

SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_new___wsdd__ProbeMatches(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__ProbeMatches(struct soap*, const struct __wsdd__ProbeMatches *, const char*, const char*);

#ifndef soap_write___wsdd__ProbeMatches
#define soap_write___wsdd__ProbeMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__ProbeMatches
#define soap_PUT___wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__ProbeMatches
#define soap_PATCH___wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__ProbeMatches
#define soap_POST_send___wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_get___wsdd__ProbeMatches(struct soap*, struct __wsdd__ProbeMatches *, const char*, const char*);

#ifndef soap_read___wsdd__ProbeMatches
#define soap_read___wsdd__ProbeMatches(soap, data) ( ((data) ? (soap_default___wsdd__ProbeMatches(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__ProbeMatches(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__ProbeMatches
#define soap_GET___wsdd__ProbeMatches(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__ProbeMatches(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__ProbeMatches
#define soap_POST_recv___wsdd__ProbeMatches(soap, data) ( soap_read___wsdd__ProbeMatches(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Probe_DEFINED
#define SOAP_TYPE___wsdd__Probe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Probe(struct soap*, struct __wsdd__Probe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Probe(struct soap*, const struct __wsdd__Probe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Probe(struct soap*, const char*, int, const struct __wsdd__Probe *, const char*);
SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_in___wsdd__Probe(struct soap*, const char*, struct __wsdd__Probe *, const char*);

SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_new___wsdd__Probe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Probe(struct soap*, const struct __wsdd__Probe *, const char*, const char*);

#ifndef soap_write___wsdd__Probe
#define soap_write___wsdd__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Probe
#define soap_PUT___wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Probe
#define soap_PATCH___wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Probe
#define soap_POST_send___wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_get___wsdd__Probe(struct soap*, struct __wsdd__Probe *, const char*, const char*);

#ifndef soap_read___wsdd__Probe
#define soap_read___wsdd__Probe(soap, data) ( ((data) ? (soap_default___wsdd__Probe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Probe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Probe
#define soap_GET___wsdd__Probe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Probe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Probe
#define soap_POST_recv___wsdd__Probe(soap, data) ( soap_read___wsdd__Probe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Bye_DEFINED
#define SOAP_TYPE___wsdd__Bye_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Bye(struct soap*, struct __wsdd__Bye *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Bye(struct soap*, const struct __wsdd__Bye *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Bye(struct soap*, const char*, int, const struct __wsdd__Bye *, const char*);
SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_in___wsdd__Bye(struct soap*, const char*, struct __wsdd__Bye *, const char*);

SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_new___wsdd__Bye(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Bye(struct soap*, const struct __wsdd__Bye *, const char*, const char*);

#ifndef soap_write___wsdd__Bye
#define soap_write___wsdd__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Bye
#define soap_PUT___wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Bye
#define soap_PATCH___wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Bye
#define soap_POST_send___wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_get___wsdd__Bye(struct soap*, struct __wsdd__Bye *, const char*, const char*);

#ifndef soap_read___wsdd__Bye
#define soap_read___wsdd__Bye(soap, data) ( ((data) ? (soap_default___wsdd__Bye(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Bye(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Bye
#define soap_GET___wsdd__Bye(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Bye(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Bye
#define soap_POST_recv___wsdd__Bye(soap, data) ( soap_read___wsdd__Bye(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Hello_DEFINED
#define SOAP_TYPE___wsdd__Hello_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Hello(struct soap*, struct __wsdd__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Hello(struct soap*, const struct __wsdd__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Hello(struct soap*, const char*, int, const struct __wsdd__Hello *, const char*);
SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_in___wsdd__Hello(struct soap*, const char*, struct __wsdd__Hello *, const char*);

SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_new___wsdd__Hello(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Hello(struct soap*, const struct __wsdd__Hello *, const char*, const char*);

#ifndef soap_write___wsdd__Hello
#define soap_write___wsdd__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Hello
#define soap_PUT___wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Hello
#define soap_PATCH___wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Hello
#define soap_POST_send___wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_get___wsdd__Hello(struct soap*, struct __wsdd__Hello *, const char*, const char*);

#ifndef soap_read___wsdd__Hello
#define soap_read___wsdd__Hello(soap, data) ( ((data) ? (soap_default___wsdd__Hello(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Hello(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Hello
#define soap_GET___wsdd__Hello(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Hello(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Hello
#define soap_POST_recv___wsdd__Hello(soap, data) ( soap_read___wsdd__Hello(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsdd__AppSequence is a typedef synonym of wsdd__AppSequenceType */

#ifndef SOAP_TYPE__wsdd__AppSequence_DEFINED
#define SOAP_TYPE__wsdd__AppSequence_DEFINED

#define soap_default__wsdd__AppSequence soap_default_wsdd__AppSequenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *);

#define soap_serialize__wsdd__AppSequence soap_serialize_wsdd__AppSequenceType


#define soap__wsdd__AppSequence2s soap_wsdd__AppSequenceType2s


#define soap_out__wsdd__AppSequence soap_out_wsdd__AppSequenceType


#define soap_s2_wsdd__AppSequence soap_s2wsdd__AppSequenceType


#define soap_in__wsdd__AppSequence soap_in_wsdd__AppSequenceType

#define soap_new__wsdd__AppSequence soap_new_wsdd__AppSequenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__AppSequence(struct soap*, const struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_write__wsdd__AppSequence
#define soap_write__wsdd__AppSequence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__AppSequence
#define soap_PUT__wsdd__AppSequence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__AppSequence
#define soap_PATCH__wsdd__AppSequence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__AppSequence
#define soap_POST_send__wsdd__AppSequence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__AppSequence soap_get_wsdd__AppSequenceType


#define soap_read__wsdd__AppSequence soap_read_wsdd__AppSequenceType


#define soap_GET__wsdd__AppSequence soap_GET_wsdd__AppSequenceType


#define soap_POST_recv__wsdd__AppSequence soap_POST_recv_wsdd__AppSequenceType

#endif
/* _wsdd__Sig is a typedef synonym of wsdd__SigType */

#ifndef SOAP_TYPE__wsdd__Sig_DEFINED
#define SOAP_TYPE__wsdd__Sig_DEFINED

#define soap_default__wsdd__Sig soap_default_wsdd__SigType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SigType(struct soap*, const struct wsdd__SigType *);

#define soap_serialize__wsdd__Sig soap_serialize_wsdd__SigType


#define soap__wsdd__Sig2s soap_wsdd__SigType2s


#define soap_out__wsdd__Sig soap_out_wsdd__SigType


#define soap_s2_wsdd__Sig soap_s2wsdd__SigType


#define soap_in__wsdd__Sig soap_in_wsdd__SigType

#define soap_new__wsdd__Sig soap_new_wsdd__SigType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Sig(struct soap*, const struct wsdd__SigType *, const char*, const char*);

#ifndef soap_write__wsdd__Sig
#define soap_write__wsdd__Sig(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Sig
#define soap_PUT__wsdd__Sig(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Sig
#define soap_PATCH__wsdd__Sig(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Sig
#define soap_POST_send__wsdd__Sig(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Sig soap_get_wsdd__SigType


#define soap_read__wsdd__Sig soap_read_wsdd__SigType


#define soap_GET__wsdd__Sig soap_GET_wsdd__SigType


#define soap_POST_recv__wsdd__Sig soap_POST_recv_wsdd__SigType

#endif
/* _wsdd__Security is a typedef synonym of wsdd__SecurityType */

#ifndef SOAP_TYPE__wsdd__Security_DEFINED
#define SOAP_TYPE__wsdd__Security_DEFINED

#define soap_default__wsdd__Security soap_default_wsdd__SecurityType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *);

#define soap_serialize__wsdd__Security soap_serialize_wsdd__SecurityType


#define soap__wsdd__Security2s soap_wsdd__SecurityType2s


#define soap_out__wsdd__Security soap_out_wsdd__SecurityType


#define soap_s2_wsdd__Security soap_s2wsdd__SecurityType


#define soap_in__wsdd__Security soap_in_wsdd__SecurityType

#define soap_new__wsdd__Security soap_new_wsdd__SecurityType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Security(struct soap*, const struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_write__wsdd__Security
#define soap_write__wsdd__Security(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Security
#define soap_PUT__wsdd__Security(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Security
#define soap_PATCH__wsdd__Security(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Security
#define soap_POST_send__wsdd__Security(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Security soap_get_wsdd__SecurityType


#define soap_read__wsdd__Security soap_read_wsdd__SecurityType


#define soap_GET__wsdd__Security soap_GET_wsdd__SecurityType


#define soap_POST_recv__wsdd__Security soap_POST_recv_wsdd__SecurityType

#endif
/* _wsdd__Scopes is a typedef synonym of wsdd__ScopesType */

#ifndef SOAP_TYPE__wsdd__Scopes_DEFINED
#define SOAP_TYPE__wsdd__Scopes_DEFINED

#define soap_default__wsdd__Scopes soap_default_wsdd__ScopesType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *);

#define soap_serialize__wsdd__Scopes soap_serialize_wsdd__ScopesType


#define soap__wsdd__Scopes2s soap_wsdd__ScopesType2s


#define soap_out__wsdd__Scopes soap_out_wsdd__ScopesType


#define soap_s2_wsdd__Scopes soap_s2wsdd__ScopesType


#define soap_in__wsdd__Scopes soap_in_wsdd__ScopesType

#define soap_new__wsdd__Scopes soap_new_wsdd__ScopesType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Scopes(struct soap*, const struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_write__wsdd__Scopes
#define soap_write__wsdd__Scopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Scopes
#define soap_PUT__wsdd__Scopes(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Scopes
#define soap_PATCH__wsdd__Scopes(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Scopes
#define soap_POST_send__wsdd__Scopes(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Scopes soap_get_wsdd__ScopesType


#define soap_read__wsdd__Scopes soap_read_wsdd__ScopesType


#define soap_GET__wsdd__Scopes soap_GET_wsdd__ScopesType


#define soap_POST_recv__wsdd__Scopes soap_POST_recv_wsdd__ScopesType

#endif
/* _wsdd__ResolveMatches is a typedef synonym of wsdd__ResolveMatchesType */

#ifndef SOAP_TYPE__wsdd__ResolveMatches_DEFINED
#define SOAP_TYPE__wsdd__ResolveMatches_DEFINED

#define soap_default__wsdd__ResolveMatches soap_default_wsdd__ResolveMatchesType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *);

#define soap_serialize__wsdd__ResolveMatches soap_serialize_wsdd__ResolveMatchesType


#define soap__wsdd__ResolveMatches2s soap_wsdd__ResolveMatchesType2s


#define soap_out__wsdd__ResolveMatches soap_out_wsdd__ResolveMatchesType


#define soap_s2_wsdd__ResolveMatches soap_s2wsdd__ResolveMatchesType


#define soap_in__wsdd__ResolveMatches soap_in_wsdd__ResolveMatchesType

#define soap_new__wsdd__ResolveMatches soap_new_wsdd__ResolveMatchesType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__ResolveMatches(struct soap*, const struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_write__wsdd__ResolveMatches
#define soap_write__wsdd__ResolveMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__ResolveMatches
#define soap_PUT__wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__ResolveMatches
#define soap_PATCH__wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__ResolveMatches
#define soap_POST_send__wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__ResolveMatches soap_get_wsdd__ResolveMatchesType


#define soap_read__wsdd__ResolveMatches soap_read_wsdd__ResolveMatchesType


#define soap_GET__wsdd__ResolveMatches soap_GET_wsdd__ResolveMatchesType


#define soap_POST_recv__wsdd__ResolveMatches soap_POST_recv_wsdd__ResolveMatchesType

#endif
/* _wsdd__Resolve is a typedef synonym of wsdd__ResolveType */

#ifndef SOAP_TYPE__wsdd__Resolve_DEFINED
#define SOAP_TYPE__wsdd__Resolve_DEFINED

#define soap_default__wsdd__Resolve soap_default_wsdd__ResolveType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *);

#define soap_serialize__wsdd__Resolve soap_serialize_wsdd__ResolveType


#define soap__wsdd__Resolve2s soap_wsdd__ResolveType2s


#define soap_out__wsdd__Resolve soap_out_wsdd__ResolveType


#define soap_s2_wsdd__Resolve soap_s2wsdd__ResolveType


#define soap_in__wsdd__Resolve soap_in_wsdd__ResolveType

#define soap_new__wsdd__Resolve soap_new_wsdd__ResolveType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Resolve(struct soap*, const struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_write__wsdd__Resolve
#define soap_write__wsdd__Resolve(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Resolve
#define soap_PUT__wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Resolve
#define soap_PATCH__wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Resolve
#define soap_POST_send__wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Resolve soap_get_wsdd__ResolveType


#define soap_read__wsdd__Resolve soap_read_wsdd__ResolveType


#define soap_GET__wsdd__Resolve soap_GET_wsdd__ResolveType


#define soap_POST_recv__wsdd__Resolve soap_POST_recv_wsdd__ResolveType

#endif
/* _wsdd__ProbeMatches is a typedef synonym of wsdd__ProbeMatchesType */

#ifndef SOAP_TYPE__wsdd__ProbeMatches_DEFINED
#define SOAP_TYPE__wsdd__ProbeMatches_DEFINED

#define soap_default__wsdd__ProbeMatches soap_default_wsdd__ProbeMatchesType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *);

#define soap_serialize__wsdd__ProbeMatches soap_serialize_wsdd__ProbeMatchesType


#define soap__wsdd__ProbeMatches2s soap_wsdd__ProbeMatchesType2s


#define soap_out__wsdd__ProbeMatches soap_out_wsdd__ProbeMatchesType


#define soap_s2_wsdd__ProbeMatches soap_s2wsdd__ProbeMatchesType


#define soap_in__wsdd__ProbeMatches soap_in_wsdd__ProbeMatchesType

#define soap_new__wsdd__ProbeMatches soap_new_wsdd__ProbeMatchesType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__ProbeMatches(struct soap*, const struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_write__wsdd__ProbeMatches
#define soap_write__wsdd__ProbeMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__ProbeMatches
#define soap_PUT__wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__ProbeMatches
#define soap_PATCH__wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__ProbeMatches
#define soap_POST_send__wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__ProbeMatches soap_get_wsdd__ProbeMatchesType


#define soap_read__wsdd__ProbeMatches soap_read_wsdd__ProbeMatchesType


#define soap_GET__wsdd__ProbeMatches soap_GET_wsdd__ProbeMatchesType


#define soap_POST_recv__wsdd__ProbeMatches soap_POST_recv_wsdd__ProbeMatchesType

#endif
/* _wsdd__Probe is a typedef synonym of wsdd__ProbeType */

#ifndef SOAP_TYPE__wsdd__Probe_DEFINED
#define SOAP_TYPE__wsdd__Probe_DEFINED

#define soap_default__wsdd__Probe soap_default_wsdd__ProbeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *);

#define soap_serialize__wsdd__Probe soap_serialize_wsdd__ProbeType


#define soap__wsdd__Probe2s soap_wsdd__ProbeType2s


#define soap_out__wsdd__Probe soap_out_wsdd__ProbeType


#define soap_s2_wsdd__Probe soap_s2wsdd__ProbeType


#define soap_in__wsdd__Probe soap_in_wsdd__ProbeType

#define soap_new__wsdd__Probe soap_new_wsdd__ProbeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Probe(struct soap*, const struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_write__wsdd__Probe
#define soap_write__wsdd__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Probe
#define soap_PUT__wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Probe
#define soap_PATCH__wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Probe
#define soap_POST_send__wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Probe soap_get_wsdd__ProbeType


#define soap_read__wsdd__Probe soap_read_wsdd__ProbeType


#define soap_GET__wsdd__Probe soap_GET_wsdd__ProbeType


#define soap_POST_recv__wsdd__Probe soap_POST_recv_wsdd__ProbeType

#endif
/* _wsdd__Bye is a typedef synonym of wsdd__ByeType */

#ifndef SOAP_TYPE__wsdd__Bye_DEFINED
#define SOAP_TYPE__wsdd__Bye_DEFINED

#define soap_default__wsdd__Bye soap_default_wsdd__ByeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *);

#define soap_serialize__wsdd__Bye soap_serialize_wsdd__ByeType


#define soap__wsdd__Bye2s soap_wsdd__ByeType2s


#define soap_out__wsdd__Bye soap_out_wsdd__ByeType


#define soap_s2_wsdd__Bye soap_s2wsdd__ByeType


#define soap_in__wsdd__Bye soap_in_wsdd__ByeType

#define soap_new__wsdd__Bye soap_new_wsdd__ByeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Bye(struct soap*, const struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_write__wsdd__Bye
#define soap_write__wsdd__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Bye
#define soap_PUT__wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Bye
#define soap_PATCH__wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Bye
#define soap_POST_send__wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Bye soap_get_wsdd__ByeType


#define soap_read__wsdd__Bye soap_read_wsdd__ByeType


#define soap_GET__wsdd__Bye soap_GET_wsdd__ByeType


#define soap_POST_recv__wsdd__Bye soap_POST_recv_wsdd__ByeType

#endif
/* _wsdd__Hello is a typedef synonym of wsdd__HelloType */

#ifndef SOAP_TYPE__wsdd__Hello_DEFINED
#define SOAP_TYPE__wsdd__Hello_DEFINED

#define soap_default__wsdd__Hello soap_default_wsdd__HelloType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *);

#define soap_serialize__wsdd__Hello soap_serialize_wsdd__HelloType


#define soap__wsdd__Hello2s soap_wsdd__HelloType2s


#define soap_out__wsdd__Hello soap_out_wsdd__HelloType


#define soap_s2_wsdd__Hello soap_s2wsdd__HelloType


#define soap_in__wsdd__Hello soap_in_wsdd__HelloType

#define soap_new__wsdd__Hello soap_new_wsdd__HelloType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Hello(struct soap*, const struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_write__wsdd__Hello
#define soap_write__wsdd__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Hello
#define soap_PUT__wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Hello
#define soap_PATCH__wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Hello
#define soap_POST_send__wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Hello soap_get_wsdd__HelloType


#define soap_read__wsdd__Hello soap_read_wsdd__HelloType


#define soap_GET__wsdd__Hello soap_GET_wsdd__HelloType


#define soap_POST_recv__wsdd__Hello soap_POST_recv_wsdd__HelloType

#endif

#ifndef SOAP_TYPE_wsdd__AppSequenceType_DEFINED
#define SOAP_TYPE_wsdd__AppSequenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__AppSequenceType(struct soap*, const char*, int, const struct wsdd__AppSequenceType *, const char*);
SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_in_wsdd__AppSequenceType(struct soap*, const char*, struct wsdd__AppSequenceType *, const char*);

SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_new_wsdd__AppSequenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_write_wsdd__AppSequenceType
#define soap_write_wsdd__AppSequenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__AppSequenceType
#define soap_PUT_wsdd__AppSequenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__AppSequenceType
#define soap_PATCH_wsdd__AppSequenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__AppSequenceType
#define soap_POST_send_wsdd__AppSequenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_get_wsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_read_wsdd__AppSequenceType
#define soap_read_wsdd__AppSequenceType(soap, data) ( ((data) ? (soap_default_wsdd__AppSequenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__AppSequenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__AppSequenceType
#define soap_GET_wsdd__AppSequenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__AppSequenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__AppSequenceType
#define soap_POST_recv_wsdd__AppSequenceType(soap, data) ( soap_read_wsdd__AppSequenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__SigType_DEFINED
#define SOAP_TYPE_wsdd__SigType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__SigType(struct soap*, struct wsdd__SigType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SigType(struct soap*, const struct wsdd__SigType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__SigType(struct soap*, const char*, int, const struct wsdd__SigType *, const char*);
SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_in_wsdd__SigType(struct soap*, const char*, struct wsdd__SigType *, const char*);

SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_new_wsdd__SigType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__SigType(struct soap*, const struct wsdd__SigType *, const char*, const char*);

#ifndef soap_write_wsdd__SigType
#define soap_write_wsdd__SigType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__SigType
#define soap_PUT_wsdd__SigType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__SigType
#define soap_PATCH_wsdd__SigType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__SigType
#define soap_POST_send_wsdd__SigType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_get_wsdd__SigType(struct soap*, struct wsdd__SigType *, const char*, const char*);

#ifndef soap_read_wsdd__SigType
#define soap_read_wsdd__SigType(soap, data) ( ((data) ? (soap_default_wsdd__SigType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__SigType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__SigType
#define soap_GET_wsdd__SigType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__SigType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__SigType
#define soap_POST_recv_wsdd__SigType(soap, data) ( soap_read_wsdd__SigType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__SecurityType_DEFINED
#define SOAP_TYPE_wsdd__SecurityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__SecurityType(struct soap*, struct wsdd__SecurityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__SecurityType(struct soap*, const char*, int, const struct wsdd__SecurityType *, const char*);
SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_in_wsdd__SecurityType(struct soap*, const char*, struct wsdd__SecurityType *, const char*);

SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_new_wsdd__SecurityType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_write_wsdd__SecurityType
#define soap_write_wsdd__SecurityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__SecurityType
#define soap_PUT_wsdd__SecurityType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__SecurityType
#define soap_PATCH_wsdd__SecurityType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__SecurityType
#define soap_POST_send_wsdd__SecurityType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_get_wsdd__SecurityType(struct soap*, struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_read_wsdd__SecurityType
#define soap_read_wsdd__SecurityType(soap, data) ( ((data) ? (soap_default_wsdd__SecurityType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__SecurityType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__SecurityType
#define soap_GET_wsdd__SecurityType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__SecurityType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__SecurityType
#define soap_POST_recv_wsdd__SecurityType(soap, data) ( soap_read_wsdd__SecurityType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ScopesType_DEFINED
#define SOAP_TYPE_wsdd__ScopesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ScopesType(struct soap*, struct wsdd__ScopesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ScopesType(struct soap*, const char*, int, const struct wsdd__ScopesType *, const char*);
SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_in_wsdd__ScopesType(struct soap*, const char*, struct wsdd__ScopesType *, const char*);

SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_new_wsdd__ScopesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_write_wsdd__ScopesType
#define soap_write_wsdd__ScopesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ScopesType
#define soap_PUT_wsdd__ScopesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ScopesType
#define soap_PATCH_wsdd__ScopesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ScopesType
#define soap_POST_send_wsdd__ScopesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_get_wsdd__ScopesType(struct soap*, struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_read_wsdd__ScopesType
#define soap_read_wsdd__ScopesType(soap, data) ( ((data) ? (soap_default_wsdd__ScopesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ScopesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ScopesType
#define soap_GET_wsdd__ScopesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ScopesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ScopesType
#define soap_POST_recv_wsdd__ScopesType(soap, data) ( soap_read_wsdd__ScopesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ResolveMatchType_DEFINED
#define SOAP_TYPE_wsdd__ResolveMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchType(struct soap*, const struct wsdd__ResolveMatchType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveMatchType(struct soap*, const char*, int, const struct wsdd__ResolveMatchType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_in_wsdd__ResolveMatchType(struct soap*, const char*, struct wsdd__ResolveMatchType *, const char*);

SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_new_wsdd__ResolveMatchType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveMatchType(struct soap*, const struct wsdd__ResolveMatchType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveMatchType
#define soap_write_wsdd__ResolveMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ResolveMatchType
#define soap_PUT_wsdd__ResolveMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ResolveMatchType
#define soap_PATCH_wsdd__ResolveMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ResolveMatchType
#define soap_POST_send_wsdd__ResolveMatchType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_get_wsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveMatchType
#define soap_read_wsdd__ResolveMatchType(soap, data) ( ((data) ? (soap_default_wsdd__ResolveMatchType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ResolveMatchType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ResolveMatchType
#define soap_GET_wsdd__ResolveMatchType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ResolveMatchType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ResolveMatchType
#define soap_POST_recv_wsdd__ResolveMatchType(soap, data) ( soap_read_wsdd__ResolveMatchType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ResolveMatchesType_DEFINED
#define SOAP_TYPE_wsdd__ResolveMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveMatchesType(struct soap*, const char*, int, const struct wsdd__ResolveMatchesType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_in_wsdd__ResolveMatchesType(struct soap*, const char*, struct wsdd__ResolveMatchesType *, const char*);

SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_new_wsdd__ResolveMatchesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveMatchesType
#define soap_write_wsdd__ResolveMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ResolveMatchesType
#define soap_PUT_wsdd__ResolveMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ResolveMatchesType
#define soap_PATCH_wsdd__ResolveMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ResolveMatchesType
#define soap_POST_send_wsdd__ResolveMatchesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_get_wsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveMatchesType
#define soap_read_wsdd__ResolveMatchesType(soap, data) ( ((data) ? (soap_default_wsdd__ResolveMatchesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ResolveMatchesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ResolveMatchesType
#define soap_GET_wsdd__ResolveMatchesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ResolveMatchesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ResolveMatchesType
#define soap_POST_recv_wsdd__ResolveMatchesType(soap, data) ( soap_read_wsdd__ResolveMatchesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ResolveType_DEFINED
#define SOAP_TYPE_wsdd__ResolveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveType(struct soap*, struct wsdd__ResolveType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveType(struct soap*, const char*, int, const struct wsdd__ResolveType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_in_wsdd__ResolveType(struct soap*, const char*, struct wsdd__ResolveType *, const char*);

SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_new_wsdd__ResolveType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveType
#define soap_write_wsdd__ResolveType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ResolveType
#define soap_PUT_wsdd__ResolveType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ResolveType
#define soap_PATCH_wsdd__ResolveType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ResolveType
#define soap_POST_send_wsdd__ResolveType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_get_wsdd__ResolveType(struct soap*, struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveType
#define soap_read_wsdd__ResolveType(soap, data) ( ((data) ? (soap_default_wsdd__ResolveType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ResolveType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ResolveType
#define soap_GET_wsdd__ResolveType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ResolveType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ResolveType
#define soap_POST_recv_wsdd__ResolveType(soap, data) ( soap_read_wsdd__ResolveType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ProbeMatchType_DEFINED
#define SOAP_TYPE_wsdd__ProbeMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchType(struct soap*, const struct wsdd__ProbeMatchType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeMatchType(struct soap*, const char*, int, const struct wsdd__ProbeMatchType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_in_wsdd__ProbeMatchType(struct soap*, const char*, struct wsdd__ProbeMatchType *, const char*);

SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_new_wsdd__ProbeMatchType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeMatchType(struct soap*, const struct wsdd__ProbeMatchType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeMatchType
#define soap_write_wsdd__ProbeMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ProbeMatchType
#define soap_PUT_wsdd__ProbeMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ProbeMatchType
#define soap_PATCH_wsdd__ProbeMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ProbeMatchType
#define soap_POST_send_wsdd__ProbeMatchType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_get_wsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeMatchType
#define soap_read_wsdd__ProbeMatchType(soap, data) ( ((data) ? (soap_default_wsdd__ProbeMatchType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ProbeMatchType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ProbeMatchType
#define soap_GET_wsdd__ProbeMatchType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ProbeMatchType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ProbeMatchType
#define soap_POST_recv_wsdd__ProbeMatchType(soap, data) ( soap_read_wsdd__ProbeMatchType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ProbeMatchesType_DEFINED
#define SOAP_TYPE_wsdd__ProbeMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeMatchesType(struct soap*, const char*, int, const struct wsdd__ProbeMatchesType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_in_wsdd__ProbeMatchesType(struct soap*, const char*, struct wsdd__ProbeMatchesType *, const char*);

SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_new_wsdd__ProbeMatchesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeMatchesType
#define soap_write_wsdd__ProbeMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ProbeMatchesType
#define soap_PUT_wsdd__ProbeMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ProbeMatchesType
#define soap_PATCH_wsdd__ProbeMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ProbeMatchesType
#define soap_POST_send_wsdd__ProbeMatchesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_get_wsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeMatchesType
#define soap_read_wsdd__ProbeMatchesType(soap, data) ( ((data) ? (soap_default_wsdd__ProbeMatchesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ProbeMatchesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ProbeMatchesType
#define soap_GET_wsdd__ProbeMatchesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ProbeMatchesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ProbeMatchesType
#define soap_POST_recv_wsdd__ProbeMatchesType(soap, data) ( soap_read_wsdd__ProbeMatchesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ProbeType_DEFINED
#define SOAP_TYPE_wsdd__ProbeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeType(struct soap*, struct wsdd__ProbeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeType(struct soap*, const char*, int, const struct wsdd__ProbeType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_in_wsdd__ProbeType(struct soap*, const char*, struct wsdd__ProbeType *, const char*);

SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_new_wsdd__ProbeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeType
#define soap_write_wsdd__ProbeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ProbeType
#define soap_PUT_wsdd__ProbeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ProbeType
#define soap_PATCH_wsdd__ProbeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ProbeType
#define soap_POST_send_wsdd__ProbeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_get_wsdd__ProbeType(struct soap*, struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeType
#define soap_read_wsdd__ProbeType(soap, data) ( ((data) ? (soap_default_wsdd__ProbeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ProbeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ProbeType
#define soap_GET_wsdd__ProbeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ProbeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ProbeType
#define soap_POST_recv_wsdd__ProbeType(soap, data) ( soap_read_wsdd__ProbeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ByeType_DEFINED
#define SOAP_TYPE_wsdd__ByeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ByeType(struct soap*, struct wsdd__ByeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ByeType(struct soap*, const char*, int, const struct wsdd__ByeType *, const char*);
SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_in_wsdd__ByeType(struct soap*, const char*, struct wsdd__ByeType *, const char*);

SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_new_wsdd__ByeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_write_wsdd__ByeType
#define soap_write_wsdd__ByeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ByeType
#define soap_PUT_wsdd__ByeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ByeType
#define soap_PATCH_wsdd__ByeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ByeType
#define soap_POST_send_wsdd__ByeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_get_wsdd__ByeType(struct soap*, struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_read_wsdd__ByeType
#define soap_read_wsdd__ByeType(soap, data) ( ((data) ? (soap_default_wsdd__ByeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ByeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ByeType
#define soap_GET_wsdd__ByeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ByeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ByeType
#define soap_POST_recv_wsdd__ByeType(soap, data) ( soap_read_wsdd__ByeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__HelloType_DEFINED
#define SOAP_TYPE_wsdd__HelloType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__HelloType(struct soap*, struct wsdd__HelloType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__HelloType(struct soap*, const char*, int, const struct wsdd__HelloType *, const char*);
SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_in_wsdd__HelloType(struct soap*, const char*, struct wsdd__HelloType *, const char*);

SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_new_wsdd__HelloType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_write_wsdd__HelloType
#define soap_write_wsdd__HelloType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__HelloType
#define soap_PUT_wsdd__HelloType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__HelloType
#define soap_PATCH_wsdd__HelloType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__HelloType
#define soap_POST_send_wsdd__HelloType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_get_wsdd__HelloType(struct soap*, struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_read_wsdd__HelloType
#define soap_read_wsdd__HelloType(soap, data) ( ((data) ? (soap_default_wsdd__HelloType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__HelloType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__HelloType
#define soap_GET_wsdd__HelloType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__HelloType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__HelloType
#define soap_POST_recv_wsdd__HelloType(soap, data) ( soap_read_wsdd__HelloType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault
#define soap_PATCH_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Reason
#define soap_PATCH_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Code
#define soap_PATCH_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Detail
#define soap_PATCH_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Header
#define soap_PATCH_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_chan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_new_chan__ChannelInstanceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_write_chan__ChannelInstanceType
#define soap_write_chan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_chan__ChannelInstanceType
#define soap_PUT_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_chan__ChannelInstanceType
#define soap_PATCH_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_chan__ChannelInstanceType
#define soap_POST_send_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_read_chan__ChannelInstanceType
#define soap_read_chan__ChannelInstanceType(soap, data) ( ((data) ? (soap_default_chan__ChannelInstanceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_chan__ChannelInstanceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_chan__ChannelInstanceType
#define soap_GET_chan__ChannelInstanceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_chan__ChannelInstanceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_chan__ChannelInstanceType
#define soap_POST_recv_chan__ChannelInstanceType(soap, data) ( soap_read_chan__ChannelInstanceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsa5__ProblemAction is a typedef synonym of wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction_DEFINED
#define SOAP_TYPE__wsa5__ProblemAction_DEFINED

#define soap_default__wsa5__ProblemAction soap_default_wsa5__ProblemActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);

#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap__wsa5__ProblemAction2s soap_wsa5__ProblemActionType2s


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_s2_wsa5__ProblemAction soap_s2wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType

#define soap_new__wsa5__ProblemAction soap_new_wsa5__ProblemActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemAction(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write__wsa5__ProblemAction
#define soap_write__wsa5__ProblemAction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ProblemAction
#define soap_PUT__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ProblemAction
#define soap_PATCH__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ProblemAction
#define soap_POST_send__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_read__wsa5__ProblemAction soap_read_wsa5__ProblemActionType


#define soap_GET__wsa5__ProblemAction soap_GET_wsa5__ProblemActionType


#define soap_POST_recv__wsa5__ProblemAction soap_POST_recv_wsa5__ProblemActionType

#endif
/* _wsa5__FaultTo is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo_DEFINED
#define SOAP_TYPE__wsa5__FaultTo_DEFINED

#define soap_default__wsa5__FaultTo soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__FaultTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__FaultTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__FaultTo soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__FaultTo(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__FaultTo
#define soap_write__wsa5__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__FaultTo
#define soap_PUT__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__FaultTo
#define soap_PATCH__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__FaultTo
#define soap_POST_send__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__FaultTo soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__FaultTo soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__FaultTo soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__From is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From_DEFINED
#define SOAP_TYPE__wsa5__From_DEFINED

#define soap_default__wsa5__From soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__From2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__From soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__From soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__From(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__From
#define soap_write__wsa5__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__From
#define soap_PUT__wsa5__From(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__From
#define soap_PATCH__wsa5__From(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__From
#define soap_POST_send__wsa5__From(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__From soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__From soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__From soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__ReplyTo is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo_DEFINED
#define SOAP_TYPE__wsa5__ReplyTo_DEFINED

#define soap_default__wsa5__ReplyTo soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__ReplyTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__ReplyTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__ReplyTo soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ReplyTo(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__ReplyTo
#define soap_write__wsa5__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ReplyTo
#define soap_PUT__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ReplyTo
#define soap_PATCH__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ReplyTo
#define soap_POST_send__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__ReplyTo soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__ReplyTo soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__ReplyTo soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__RelatesTo is a typedef synonym of wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo_DEFINED
#define SOAP_TYPE__wsa5__RelatesTo_DEFINED

#define soap_default__wsa5__RelatesTo soap_default_wsa5__RelatesToType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);

#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap__wsa5__RelatesTo2s soap_wsa5__RelatesToType2s


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_s2_wsa5__RelatesTo soap_s2wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType

#define soap_new__wsa5__RelatesTo soap_new_wsa5__RelatesToType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__RelatesTo(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write__wsa5__RelatesTo
#define soap_write__wsa5__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__RelatesTo
#define soap_PUT__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__RelatesTo
#define soap_PATCH__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__RelatesTo
#define soap_POST_send__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_read__wsa5__RelatesTo soap_read_wsa5__RelatesToType


#define soap_GET__wsa5__RelatesTo soap_GET_wsa5__RelatesToType


#define soap_POST_recv__wsa5__RelatesTo soap_POST_recv_wsa5__RelatesToType

#endif
/* _wsa5__Metadata is a typedef synonym of wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata_DEFINED
#define SOAP_TYPE__wsa5__Metadata_DEFINED

#define soap_default__wsa5__Metadata soap_default_wsa5__MetadataType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);

#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap__wsa5__Metadata2s soap_wsa5__MetadataType2s


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_s2_wsa5__Metadata soap_s2wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType

#define soap_new__wsa5__Metadata soap_new_wsa5__MetadataType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__Metadata(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write__wsa5__Metadata
#define soap_write__wsa5__Metadata(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__Metadata
#define soap_PUT__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__Metadata
#define soap_PATCH__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__Metadata
#define soap_POST_send__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_read__wsa5__Metadata soap_read_wsa5__MetadataType


#define soap_GET__wsa5__Metadata soap_GET_wsa5__MetadataType


#define soap_POST_recv__wsa5__Metadata soap_POST_recv_wsa5__MetadataType

#endif
/* _wsa5__ReferenceParameters is a typedef synonym of wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters_DEFINED
#define SOAP_TYPE__wsa5__ReferenceParameters_DEFINED

#define soap_default__wsa5__ReferenceParameters soap_default_wsa5__ReferenceParametersType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);

#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap__wsa5__ReferenceParameters2s soap_wsa5__ReferenceParametersType2s


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_s2_wsa5__ReferenceParameters soap_s2wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType

#define soap_new__wsa5__ReferenceParameters soap_new_wsa5__ReferenceParametersType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ReferenceParameters(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write__wsa5__ReferenceParameters
#define soap_write__wsa5__ReferenceParameters(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ReferenceParameters
#define soap_PUT__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ReferenceParameters
#define soap_PATCH__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ReferenceParameters
#define soap_POST_send__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_read__wsa5__ReferenceParameters soap_read_wsa5__ReferenceParametersType


#define soap_GET__wsa5__ReferenceParameters soap_GET_wsa5__ReferenceParametersType


#define soap_POST_recv__wsa5__ReferenceParameters soap_POST_recv_wsa5__ReferenceParametersType

#endif
/* _wsa5__EndpointReference is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference_DEFINED
#define SOAP_TYPE__wsa5__EndpointReference_DEFINED

#define soap_default__wsa5__EndpointReference soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__EndpointReference2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__EndpointReference soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__EndpointReference soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__EndpointReference(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__EndpointReference
#define soap_write__wsa5__EndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__EndpointReference
#define soap_PUT__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__EndpointReference
#define soap_PATCH__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__EndpointReference
#define soap_POST_send__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__EndpointReference soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__EndpointReference soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__EndpointReference soap_POST_recv_wsa5__EndpointReferenceType

#endif

#ifndef SOAP_TYPE_wsa5__ProblemActionType_DEFINED
#define SOAP_TYPE_wsa5__ProblemActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_new_wsa5__ProblemActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write_wsa5__ProblemActionType
#define soap_write_wsa5__ProblemActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__ProblemActionType
#define soap_PUT_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__ProblemActionType
#define soap_PATCH_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__ProblemActionType
#define soap_POST_send_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_read_wsa5__ProblemActionType
#define soap_read_wsa5__ProblemActionType(soap, data) ( ((data) ? (soap_default_wsa5__ProblemActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ProblemActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__ProblemActionType
#define soap_GET_wsa5__ProblemActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__ProblemActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__ProblemActionType
#define soap_POST_recv_wsa5__ProblemActionType(soap, data) ( soap_read_wsa5__ProblemActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelatesToType_DEFINED
#define SOAP_TYPE_wsa5__RelatesToType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_new_wsa5__RelatesToType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write_wsa5__RelatesToType
#define soap_write_wsa5__RelatesToType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelatesToType
#define soap_PUT_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelatesToType
#define soap_PATCH_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelatesToType
#define soap_POST_send_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_read_wsa5__RelatesToType
#define soap_read_wsa5__RelatesToType(soap, data) ( ((data) ? (soap_default_wsa5__RelatesToType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__RelatesToType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelatesToType
#define soap_GET_wsa5__RelatesToType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelatesToType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelatesToType
#define soap_POST_recv_wsa5__RelatesToType(soap, data) ( soap_read_wsa5__RelatesToType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__MetadataType_DEFINED
#define SOAP_TYPE_wsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_new_wsa5__MetadataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write_wsa5__MetadataType
#define soap_write_wsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__MetadataType
#define soap_PUT_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__MetadataType
#define soap_PATCH_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__MetadataType
#define soap_POST_send_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_read_wsa5__MetadataType
#define soap_read_wsa5__MetadataType(soap, data) ( ((data) ? (soap_default_wsa5__MetadataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__MetadataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__MetadataType
#define soap_GET_wsa5__MetadataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__MetadataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__MetadataType
#define soap_POST_recv_wsa5__MetadataType(soap, data) ( soap_read_wsa5__MetadataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa5__ReferenceParametersType
#define soap_write_wsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__ReferenceParametersType
#define soap_PUT_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__ReferenceParametersType
#define soap_PATCH_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__ReferenceParametersType
#define soap_POST_send_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa5__ReferenceParametersType
#define soap_read_wsa5__ReferenceParametersType(soap, data) ( ((data) ? (soap_default_wsa5__ReferenceParametersType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ReferenceParametersType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__ReferenceParametersType
#define soap_GET_wsa5__ReferenceParametersType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__ReferenceParametersType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__ReferenceParametersType
#define soap_POST_recv_wsa5__ReferenceParametersType(soap, data) ( soap_read_wsa5__ReferenceParametersType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
#define SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa5__EndpointReferenceType
#define soap_write_wsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__EndpointReferenceType
#define soap_PUT_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__EndpointReferenceType
#define soap_PATCH_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__EndpointReferenceType
#define soap_POST_send_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa5__EndpointReferenceType
#define soap_read_wsa5__EndpointReferenceType(soap, data) ( ((data) ? (soap_default_wsa5__EndpointReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__EndpointReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__EndpointReferenceType
#define soap_GET_wsa5__EndpointReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__EndpointReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__EndpointReferenceType
#define soap_POST_recv_wsa5__EndpointReferenceType(soap, data) ( soap_read_wsa5__EndpointReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_PointerTowsdd__ResolveMatchesType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ResolveMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveMatchesType(struct soap*, const char *, int, struct wsdd__ResolveMatchesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveMatchesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveMatchesType(struct soap*, const char*, struct wsdd__ResolveMatchesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ResolveType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ResolveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveType(struct soap*, const char *, int, struct wsdd__ResolveType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveType(struct soap*, const char*, struct wsdd__ResolveType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ResolveType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ProbeMatchesType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ProbeMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeMatchesType(struct soap*, const char *, int, struct wsdd__ProbeMatchesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeMatchesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeMatchesType(struct soap*, const char*, struct wsdd__ProbeMatchesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ProbeType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ProbeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeType(struct soap*, const char *, int, struct wsdd__ProbeType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeType(struct soap*, const char*, struct wsdd__ProbeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ProbeType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ByeType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ByeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ByeType(struct soap*, const char *, int, struct wsdd__ByeType *const*, const char *);
SOAP_FMAC3 struct wsdd__ByeType ** SOAP_FMAC4 soap_in_PointerTowsdd__ByeType(struct soap*, const char*, struct wsdd__ByeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ByeType ** SOAP_FMAC4 soap_get_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__HelloType_DEFINED
#define SOAP_TYPE_PointerTowsdd__HelloType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__HelloType(struct soap*, const char *, int, struct wsdd__HelloType *const*, const char *);
SOAP_FMAC3 struct wsdd__HelloType ** SOAP_FMAC4 soap_in_PointerTowsdd__HelloType(struct soap*, const char*, struct wsdd__HelloType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__HelloType ** SOAP_FMAC4 soap_get_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__AppSequenceType_DEFINED
#define SOAP_TYPE_PointerTowsdd__AppSequenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__AppSequenceType(struct soap*, const char *, int, struct wsdd__AppSequenceType *const*, const char *);
SOAP_FMAC3 struct wsdd__AppSequenceType ** SOAP_FMAC4 soap_in_PointerTowsdd__AppSequenceType(struct soap*, const char*, struct wsdd__AppSequenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__AppSequenceType ** SOAP_FMAC4 soap_get_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType **, const char*, const char*);
#endif
/* _wsdd__Id is a typedef synonym of string */

#ifndef SOAP_TYPE__wsdd__Id_DEFINED
#define SOAP_TYPE__wsdd__Id_DEFINED

#define soap_default__wsdd__Id soap_default_string


#define soap_serialize__wsdd__Id soap_serialize_string


#define soap__wsdd__Id2s(soap, a) (a)

#define soap_out__wsdd__Id soap_out_string


#define soap_s2_wsdd__Id(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsdd__Id soap_in_string

#define soap_new__wsdd__Id soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Id(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsdd__Id
#define soap_write__wsdd__Id(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Id
#define soap_PUT__wsdd__Id(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Id
#define soap_PATCH__wsdd__Id(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Id
#define soap_POST_send__wsdd__Id(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Id soap_get_string


#define soap_read__wsdd__Id soap_read_string


#define soap_GET__wsdd__Id soap_GET_string


#define soap_POST_recv__wsdd__Id soap_POST_recv_string

#endif
/* _wsdd__SupportedMatchingRules is a typedef synonym of wsdd__UriListType */

#ifndef SOAP_TYPE__wsdd__SupportedMatchingRules_DEFINED
#define SOAP_TYPE__wsdd__SupportedMatchingRules_DEFINED

#define soap_default__wsdd__SupportedMatchingRules soap_default_wsdd__UriListType


#define soap_serialize__wsdd__SupportedMatchingRules soap_serialize_wsdd__UriListType


#define soap__wsdd__SupportedMatchingRules2s(soap, a) (a)

#define soap_out__wsdd__SupportedMatchingRules soap_out_wsdd__UriListType


#define soap_s2_wsdd__SupportedMatchingRules(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsdd__SupportedMatchingRules soap_in_wsdd__UriListType

#define soap_new__wsdd__SupportedMatchingRules soap_new_wsdd__UriListType


#define soap_put__wsdd__SupportedMatchingRules soap_put_wsdd__UriListType


#define soap_write__wsdd__SupportedMatchingRules soap_write_wsdd__UriListType


#define soap_PUT__wsdd__SupportedMatchingRules soap_PUT_wsdd__UriListType


#define soap_PATCH__wsdd__SupportedMatchingRules soap_PATCH_wsdd__UriListType


#define soap_POST_send__wsdd__SupportedMatchingRules soap_POST_send_wsdd__UriListType


#define soap_get__wsdd__SupportedMatchingRules soap_get_wsdd__UriListType


#define soap_read__wsdd__SupportedMatchingRules soap_read_wsdd__UriListType


#define soap_GET__wsdd__SupportedMatchingRules soap_GET_wsdd__UriListType


#define soap_POST_recv__wsdd__SupportedMatchingRules soap_POST_recv_wsdd__UriListType

#endif
/* _wsdd__XAddrs is a typedef synonym of wsdd__UriListType */

#ifndef SOAP_TYPE__wsdd__XAddrs_DEFINED
#define SOAP_TYPE__wsdd__XAddrs_DEFINED

#define soap_default__wsdd__XAddrs soap_default_wsdd__UriListType


#define soap_serialize__wsdd__XAddrs soap_serialize_wsdd__UriListType


#define soap__wsdd__XAddrs2s(soap, a) (a)

#define soap_out__wsdd__XAddrs soap_out_wsdd__UriListType


#define soap_s2_wsdd__XAddrs(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsdd__XAddrs soap_in_wsdd__UriListType

#define soap_new__wsdd__XAddrs soap_new_wsdd__UriListType


#define soap_put__wsdd__XAddrs soap_put_wsdd__UriListType


#define soap_write__wsdd__XAddrs soap_write_wsdd__UriListType


#define soap_PUT__wsdd__XAddrs soap_PUT_wsdd__UriListType


#define soap_PATCH__wsdd__XAddrs soap_PATCH_wsdd__UriListType


#define soap_POST_send__wsdd__XAddrs soap_POST_send_wsdd__UriListType


#define soap_get__wsdd__XAddrs soap_get_wsdd__UriListType


#define soap_read__wsdd__XAddrs soap_read_wsdd__UriListType


#define soap_GET__wsdd__XAddrs soap_GET_wsdd__UriListType


#define soap_POST_recv__wsdd__XAddrs soap_POST_recv_wsdd__UriListType

#endif
/* _wsdd__Types is a typedef synonym of wsdd__QNameListType */

#ifndef SOAP_TYPE__wsdd__Types_DEFINED
#define SOAP_TYPE__wsdd__Types_DEFINED

#define soap_default__wsdd__Types soap_default_wsdd__QNameListType


#define soap_serialize__wsdd__Types soap_serialize_wsdd__QNameListType


#define soap__wsdd__Types2s(soap, a) soap_QName2s(soap, (a))

#define soap_out__wsdd__Types soap_out_wsdd__QNameListType


#define soap_s2_wsdd__Types(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in__wsdd__Types soap_in_wsdd__QNameListType

#define soap_new__wsdd__Types soap_new_wsdd__QNameListType


#define soap_put__wsdd__Types soap_put_wsdd__QNameListType


#define soap_write__wsdd__Types soap_write_wsdd__QNameListType


#define soap_PUT__wsdd__Types soap_PUT_wsdd__QNameListType


#define soap_PATCH__wsdd__Types soap_PATCH_wsdd__QNameListType


#define soap_POST_send__wsdd__Types soap_POST_send_wsdd__QNameListType


#define soap_get__wsdd__Types soap_get_wsdd__QNameListType


#define soap_read__wsdd__Types soap_read_wsdd__QNameListType


#define soap_GET__wsdd__Types soap_GET_wsdd__QNameListType


#define soap_POST_recv__wsdd__Types soap_POST_recv_wsdd__QNameListType

#endif

#ifndef SOAP_TYPE_PointerTowsdd__SigType_DEFINED
#define SOAP_TYPE_PointerTowsdd__SigType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__SigType(struct soap*, const char *, int, struct wsdd__SigType *const*, const char *);
SOAP_FMAC3 struct wsdd__SigType ** SOAP_FMAC4 soap_in_PointerTowsdd__SigType(struct soap*, const char*, struct wsdd__SigType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__SigType ** SOAP_FMAC4 soap_get_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ResolveMatchType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ResolveMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveMatchType(struct soap*, const char *, int, struct wsdd__ResolveMatchType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveMatchType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveMatchType(struct soap*, const char*, struct wsdd__ResolveMatchType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ProbeMatchType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ProbeMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeMatchType(struct soap*, const char *, int, struct wsdd__ProbeMatchType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeMatchType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeMatchType(struct soap*, const char*, struct wsdd__ProbeMatchType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTounsignedInt_DEFINED
#define SOAP_TYPE_PointerTounsignedInt_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedInt(struct soap*, unsigned int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedInt(struct soap*, const char *, int, unsigned int *const*, const char *);
SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_in_PointerTounsignedInt(struct soap*, const char*, unsigned int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedInt(struct soap*, unsigned int *const*, const char*, const char*);
SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_get_PointerTounsignedInt(struct soap*, unsigned int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ScopesType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ScopesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ScopesType(struct soap*, const char *, int, struct wsdd__ScopesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ScopesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ScopesType(struct soap*, const char*, struct wsdd__ScopesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ScopesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsdd__FaultCodeOpenType_DEFINED
#define SOAP_TYPE_wsdd__FaultCodeOpenType_DEFINED

#ifdef SOAP_DEFAULT_wsdd__FaultCodeOpenType
#define soap_default_wsdd__FaultCodeOpenType(soap, a) (*(a) = SOAP_DEFAULT_wsdd__FaultCodeOpenType)
#else
#define soap_default_wsdd__FaultCodeOpenType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__FaultCodeOpenType(struct soap*, char *const*);

#define soap_wsdd__FaultCodeOpenType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__FaultCodeOpenType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsdd__FaultCodeOpenType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__FaultCodeOpenType(struct soap*, const char*, char **, const char*);
#define soap_new_wsdd__FaultCodeOpenType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__FaultCodeOpenType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__FaultCodeOpenType
#define soap_write_wsdd__FaultCodeOpenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__FaultCodeOpenType
#define soap_PUT_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__FaultCodeOpenType
#define soap_PATCH_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__FaultCodeOpenType
#define soap_POST_send_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__FaultCodeOpenType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__FaultCodeOpenType
#define soap_read_wsdd__FaultCodeOpenType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__FaultCodeOpenType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__FaultCodeOpenType
#define soap_GET_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__FaultCodeOpenType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__FaultCodeOpenType
#define soap_POST_recv_wsdd__FaultCodeOpenType(soap, data) ( soap_read_wsdd__FaultCodeOpenType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__UriListType_DEFINED
#define SOAP_TYPE_wsdd__UriListType_DEFINED

#ifdef SOAP_DEFAULT_wsdd__UriListType
#define soap_default_wsdd__UriListType(soap, a) (*(a) = SOAP_DEFAULT_wsdd__UriListType)
#else
#define soap_default_wsdd__UriListType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__UriListType(struct soap*, char *const*);

#define soap_wsdd__UriListType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__UriListType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsdd__UriListType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__UriListType(struct soap*, const char*, char **, const char*);
#define soap_new_wsdd__UriListType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__UriListType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__UriListType
#define soap_write_wsdd__UriListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__UriListType
#define soap_PUT_wsdd__UriListType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__UriListType
#define soap_PATCH_wsdd__UriListType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__UriListType
#define soap_POST_send_wsdd__UriListType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__UriListType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__UriListType
#define soap_read_wsdd__UriListType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__UriListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__UriListType
#define soap_GET_wsdd__UriListType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__UriListType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__UriListType
#define soap_POST_recv_wsdd__UriListType(soap, data) ( soap_read_wsdd__UriListType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* wsdd__QNameListType is a typedef synonym of _QName */

#ifndef SOAP_TYPE_wsdd__QNameListType_DEFINED
#define SOAP_TYPE_wsdd__QNameListType_DEFINED

#define soap_default_wsdd__QNameListType soap_default__QName


#define soap_serialize_wsdd__QNameListType soap_serialize__QName


#define soap_wsdd__QNameListType2s(soap, a) soap_QName2s(soap, (a))

#define soap_out_wsdd__QNameListType soap_out__QName


#define soap_s2wsdd__QNameListType(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in_wsdd__QNameListType soap_in__QName

#define soap_new_wsdd__QNameListType soap_new__QName


#define soap_put_wsdd__QNameListType soap_put__QName


#define soap_write_wsdd__QNameListType soap_write__QName


#define soap_PUT_wsdd__QNameListType soap_PUT__QName


#define soap_PATCH_wsdd__QNameListType soap_PATCH__QName


#define soap_POST_send_wsdd__QNameListType soap_POST_send__QName


#define soap_get_wsdd__QNameListType soap_get__QName


#define soap_read_wsdd__QNameListType soap_read__QName


#define soap_GET_wsdd__QNameListType soap_GET__QName


#define soap_POST_recv_wsdd__QNameListType soap_POST_recv__QName

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__From_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__From_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);
#endif
/* _wsa5__ProblemIRI is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI_DEFINED
#define SOAP_TYPE__wsa5__ProblemIRI_DEFINED

#define soap_default__wsa5__ProblemIRI soap_default_string


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap__wsa5__ProblemIRI2s(soap, a) (a)

#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_s2_wsa5__ProblemIRI(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__ProblemIRI soap_in_string

#define soap_new__wsa5__ProblemIRI soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemIRI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__ProblemIRI
#define soap_write__wsa5__ProblemIRI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ProblemIRI
#define soap_PUT__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ProblemIRI
#define soap_PATCH__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ProblemIRI
#define soap_POST_send__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ProblemIRI soap_get_string


#define soap_read__wsa5__ProblemIRI soap_read_string


#define soap_GET__wsa5__ProblemIRI soap_GET_string


#define soap_POST_recv__wsa5__ProblemIRI soap_POST_recv_string

#endif
/* _wsa5__ProblemHeaderQName is a typedef synonym of _QName */

#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED
#define SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED

#define soap_default__wsa5__ProblemHeaderQName soap_default__QName


#define soap_serialize__wsa5__ProblemHeaderQName soap_serialize__QName


#define soap__wsa5__ProblemHeaderQName2s(soap, a) soap_QName2s(soap, (a))

#define soap_out__wsa5__ProblemHeaderQName soap_out__QName


#define soap_s2_wsa5__ProblemHeaderQName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in__wsa5__ProblemHeaderQName soap_in__QName

#define soap_new__wsa5__ProblemHeaderQName soap_new__QName


#define soap_put__wsa5__ProblemHeaderQName soap_put__QName


#define soap_write__wsa5__ProblemHeaderQName soap_write__QName


#define soap_PUT__wsa5__ProblemHeaderQName soap_PUT__QName


#define soap_PATCH__wsa5__ProblemHeaderQName soap_PATCH__QName


#define soap_POST_send__wsa5__ProblemHeaderQName soap_POST_send__QName


#define soap_get__wsa5__ProblemHeaderQName soap_get__QName


#define soap_read__wsa5__ProblemHeaderQName soap_read__QName


#define soap_GET__wsa5__ProblemHeaderQName soap_GET__QName


#define soap_POST_recv__wsa5__ProblemHeaderQName soap_POST_recv__QName

#endif
/* _wsa5__Action is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__Action_DEFINED
#define SOAP_TYPE__wsa5__Action_DEFINED

#define soap_default__wsa5__Action soap_default_string


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap__wsa5__Action2s(soap, a) (a)

#define soap_out__wsa5__Action soap_out_string


#define soap_s2_wsa5__Action(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__Action soap_in_string

#define soap_new__wsa5__Action soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__Action(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__Action
#define soap_write__wsa5__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__Action
#define soap_PUT__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__Action
#define soap_PATCH__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__Action
#define soap_POST_send__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__Action soap_get_string


#define soap_read__wsa5__Action soap_read_string


#define soap_GET__wsa5__Action soap_GET_string


#define soap_POST_recv__wsa5__Action soap_POST_recv_string

#endif
/* _wsa5__To is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__To_DEFINED
#define SOAP_TYPE__wsa5__To_DEFINED

#define soap_default__wsa5__To soap_default_string


#define soap_serialize__wsa5__To soap_serialize_string


#define soap__wsa5__To2s(soap, a) (a)

#define soap_out__wsa5__To soap_out_string


#define soap_s2_wsa5__To(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__To soap_in_string

#define soap_new__wsa5__To soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__To(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__To
#define soap_write__wsa5__To(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__To
#define soap_PUT__wsa5__To(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__To
#define soap_PATCH__wsa5__To(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__To
#define soap_POST_send__wsa5__To(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__To soap_get_string


#define soap_read__wsa5__To soap_read_string


#define soap_GET__wsa5__To soap_GET_string


#define soap_POST_recv__wsa5__To soap_POST_recv_string

#endif
/* _wsa5__MessageID is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__MessageID_DEFINED
#define SOAP_TYPE__wsa5__MessageID_DEFINED

#define soap_default__wsa5__MessageID soap_default_string


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap__wsa5__MessageID2s(soap, a) (a)

#define soap_out__wsa5__MessageID soap_out_string


#define soap_s2_wsa5__MessageID(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__MessageID soap_in_string

#define soap_new__wsa5__MessageID soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__MessageID(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__MessageID
#define soap_write__wsa5__MessageID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__MessageID
#define soap_PUT__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__MessageID
#define soap_PATCH__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__MessageID
#define soap_POST_send__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__MessageID soap_get_string


#define soap_read__wsa5__MessageID soap_read_string


#define soap_GET__wsa5__MessageID soap_GET_string


#define soap_POST_recv__wsa5__MessageID soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerToint_DEFINED
#define SOAP_TYPE_PointerToint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_XML_DEFINED
#define SOAP_TYPE_PointerTo_XML_DEFINED
#endif

#ifndef SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
#define SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__FaultCodesOpenEnumType
#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__FaultCodesOpenEnumType)
#else
#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);

#define soap_wsa5__FaultCodesOpenEnumType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__FaultCodesOpenEnumType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
#define soap_new_wsa5__FaultCodesOpenEnumType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesOpenEnumType
#define soap_write_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__FaultCodesOpenEnumType
#define soap_PUT_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__FaultCodesOpenEnumType
#define soap_PATCH_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__FaultCodesOpenEnumType
#define soap_POST_send_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesOpenEnumType
#define soap_read_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesOpenEnumType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__FaultCodesOpenEnumType
#define soap_GET_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__FaultCodesOpenEnumType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__FaultCodesOpenEnumType
#define soap_POST_recv_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_read_wsa5__FaultCodesOpenEnumType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED

#ifdef SOAP_DEFAULT_wsa5__RelationshipTypeOpenEnum
#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) (*(a) = SOAP_DEFAULT_wsa5__RelationshipTypeOpenEnum)
#else
#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);

#define soap_wsa5__RelationshipTypeOpenEnum2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__RelationshipTypeOpenEnum(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
#define soap_new_wsa5__RelationshipTypeOpenEnum soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipTypeOpenEnum
#define soap_write_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelationshipTypeOpenEnum
#define soap_PUT_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelationshipTypeOpenEnum
#define soap_PATCH_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelationshipTypeOpenEnum
#define soap_POST_send_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipTypeOpenEnum
#define soap_read_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipTypeOpenEnum(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelationshipTypeOpenEnum
#define soap_GET_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelationshipTypeOpenEnum(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelationshipTypeOpenEnum
#define soap_POST_recv_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_read_wsa5__RelationshipTypeOpenEnum(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__QName
#define soap_PATCH__QName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_string
#define soap_PATCH_string(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

/* End of wsddH.h */
